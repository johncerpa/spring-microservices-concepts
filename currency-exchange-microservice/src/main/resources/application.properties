spring.application.name = currency-exchange

server.port = 8000


spring.jpa.show-sql = true
spring.datasource.url = jdbc:h2:mem:testdb
spring.h2.console-enabled = true

eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

eureka.instance.hostname = localhost

#resilience4j.retry.instances.sample-api.maxRetryAttempts = 5
#resilience4j.retry.instances.sample-api.waitDuration = 1s
#resilience4j.retry.instances.sample-api.enableExponentialBackOff = true

# if more than 60% of requests fail the circuit breaker goes into an OPEN state
#resilience4j.circuitbreaker.instances.default.failureRateThreshold = 60

# With these properties only 2 requests per 10 seconds are allowed
resilience4j.ratelimiter.instances.default.limitForPeriod = 2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod = 10s

# Only allowed 10 concurrent calls for an endpoint so if one endpoint keeps failing the whole system does not fail
# endpoint1, count = 0, max = 10
# endpoint2, count = 11, max = 10, if endpoint2 keeps getting failed calls then the system will get slow, so if it passes this
#                                  limit we stop receiving calls from this endpoint and let the other endpoints function normally
resilience4j.bulkheadpattern.instances.default.maxConcurrentCalls = 10

# trace 100% of the requests, in production we set a different value because tracing every request is costly
spring.sleuth.sampler.probability = 1.0





